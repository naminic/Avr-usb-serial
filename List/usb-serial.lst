
AVRASM ver. 2.1.30  D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\USB to serial\Avr-usb-serial\List\usb-serial.asm Mon Aug 04 16:13:44 2014

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega32
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2143
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 006a 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
000033 3130
000034 3332
000035 3534
000036 3736      	.DB  0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37
000037 3938
D:\Ebooks\Electrical\AVR\naminic\AVR Project Files\USB to serial\Avr-usb-serial\List\usb-serial.asm(1108): warning: .cseg .db misalignment - padding zero byte
000038 0000      	.DB  0x38,0x39,0x0
                 _0x0:
000039 5757
00003a 2e57
00003b 414e
00003c 494d      	.DB  0x57,0x57,0x57,0x2E,0x4E,0x41,0x4D,0x49
00003d 494e
00003e 2e43
00003f 4f43
000040 0a4d      	.DB  0x4E,0x49,0x43,0x2E,0x43,0x4F,0x4D,0xA
000041 000d
000042 0d0a
000043 7270
000044 7365      	.DB  0xD,0x0,0xA,0xD,0x70,0x72,0x65,0x73
000045 2073
000046 6e61
000047 2079
000048 756e      	.DB  0x73,0x20,0x61,0x6E,0x79,0x20,0x6E,0x75
000049 626d
00004a 7265
00004b 6f20
00004c 2072      	.DB  0x6D,0x62,0x65,0x72,0x20,0x6F,0x72,0x20
00004d 6527
00004e 2027
00004f 6f66
000050 2072      	.DB  0x27,0x65,0x27,0x20,0x66,0x6F,0x72,0x20
000051 7865
000052 7469
000053 003a
000054 0d0a      	.DB  0x65,0x78,0x69,0x74,0x3A,0x0,0xA,0xD
000055 6f79
000056 7275
000057 7320
000058 7265      	.DB  0x79,0x6F,0x75,0x72,0x20,0x73,0x65,0x72
000059 6169
00005a 206c
00005b 7369
00005c 253a      	.DB  0x69,0x61,0x6C,0x20,0x69,0x73,0x3A,0x25
00005d 0073
00005e 0d0a
00005f 6874
000060 2065      	.DB  0x73,0x0,0xA,0xD,0x74,0x68,0x65,0x20
000061 7270
000062 676f
000063 6172
000064 206d      	.DB  0x70,0x72,0x6F,0x67,0x72,0x61,0x6D,0x20
000065 7369
000066 6520
000067 646e
000068 6465      	.DB  0x69,0x73,0x20,0x65,0x6E,0x64,0x65,0x64
000069 002e      	.DB  0x2E,0x0
                 __RESET:
00006a 94f8      	CLI
00006b 27ee      	CLR  R30
00006c bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00006d e0f1      	LDI  R31,1
00006e bffb      	OUT  GICR,R31
00006f bfeb      	OUT  GICR,R30
000070 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000071 e1f8      	LDI  R31,0x18
000072 bdf1      	OUT  WDTCR,R31
000073 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000074 e08d      	LDI  R24,(14-2)+1
000075 e0a2      	LDI  R26,2
000076 27bb      	CLR  R27
                 __CLEAR_REG:
000077 93ed      	ST   X+,R30
000078 958a      	DEC  R24
000079 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00007a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00007b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00007c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00007d 93ed      	ST   X+,R30
00007e 9701      	SBIW R24,1
00007f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000080 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000081 bfed      	OUT  SPL,R30
000082 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000083 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000084 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000085 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000086 940c 0088 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Chip type               : ATmega32
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 512
                 ;*****************************************************/
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;
                 ;void main(void)
                 ; 0000 000F {
                 
                 	.CSEG
                 _main:
                 ; 0000 0010 unsigned char a=0, *b, c[11]="0123456789";
                 ; 0000 0011 // USART initialization
                 ; 0000 0012 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0013 // USART Receiver: On
                 ; 0000 0014 // USART Transmitter: On
                 ; 0000 0015 // USART Mode: Asynchronous
                 ; 0000 0016 // USART Baud Rate: 9600
                 ; 0000 0017 UCSRA=0x00;
000088 972b      	SBIW R28,11
000089 e08b      	LDI  R24,11
00008a e0a0      	LDI  R26,LOW(0)
00008b e0b0      	LDI  R27,HIGH(0)
00008c e6e6      	LDI  R30,LOW(_0x3*2)
00008d e0f0      	LDI  R31,HIGH(_0x3*2)
00008e 940e 02de 	CALL __INITLOCB
                 ;	a -> R17
                 ;	*b -> R18,R19
                 ;	c -> Y+0
000090 e010      	LDI  R17,0
000091 e0e0      	LDI  R30,LOW(0)
000092 b9eb      	OUT  0xB,R30
                 ; 0000 0018 UCSRB=0x18;
000093 e1e8      	LDI  R30,LOW(24)
000094 b9ea      	OUT  0xA,R30
                 ; 0000 0019 UCSRC=0x86;
000095 e8e6      	LDI  R30,LOW(134)
000096 bde0      	OUT  0x20,R30
                 ; 0000 001A UBRRH=0x00;
000097 e0e0      	LDI  R30,LOW(0)
000098 bde0      	OUT  0x20,R30
                 ; 0000 001B UBRRL=0x33;
000099 e3e3      	LDI  R30,LOW(51)
00009a b9e9      	OUT  0x9,R30
                 ; 0000 001C 
                 ; 0000 001D while (1)
                 ; 0000 001E       {
                 ; 0000 001F           printf("WWW.NAMINIC.COM\n\r");
                +
00009b e7e2     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00009c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00009d 940e 028f 	CALL SUBOPT_0x0
                 ; 0000 0020           while(a!='e')
                 _0x7:
00009f 3615      	CPI  R17,101
0000a0 f161      	BREQ _0x9
                 ; 0000 0021           {
                 ; 0000 0022               printf("\n\rpress any number or 'e' for exit:");
                +
0000a1 e8e4     +LDI R30 , LOW ( 2 * _0x0 + ( 18 ) )
0000a2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 18 ) )
                 	__POINTW1FN _0x0,18
0000a3 940e 028f 	CALL SUBOPT_0x0
                 ; 0000 0023               gets(&a,1);
0000a5 b7ed      	IN   R30,SPL
0000a6 b7fe      	IN   R31,SPH
0000a7 93fa      	ST   -Y,R31
0000a8 93ea      	ST   -Y,R30
0000a9 931f      	PUSH R17
0000aa e0a1      	LDI  R26,LOW(1)
0000ab e0b0      	LDI  R27,0
0000ac 940e 00de 	CALL _gets
0000ae 911f      	POP  R17
                 ; 0000 0024               if(a>='0' && a<= '9')
0000af 3310      	CPI  R17,48
0000b0 f010      	BRLO _0xB
0000b1 331a      	CPI  R17,58
0000b2 f008      	BRLO _0xC
                 _0xB:
0000b3 c014      	RJMP _0xA
                 _0xC:
                 ; 0000 0025               {
                 ; 0000 0026                   b=&c[(a-48)];
0000b4 2fe1      	MOV  R30,R17
0000b5 e0f0      	LDI  R31,0
0000b6 97f0      	SBIW R30,48
0000b7 01de      	MOVW R26,R28
0000b8 0fea      	ADD  R30,R26
0000b9 1ffb      	ADC  R31,R27
0000ba 019f      	MOVW R18,R30
                 ; 0000 0027                   printf("\n\ryour serial is:%s",b);
                +
0000bb eae8     +LDI R30 , LOW ( 2 * _0x0 + ( 54 ) )
0000bc e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 54 ) )
                 	__POINTW1FN _0x0,54
0000bd 93fa      	ST   -Y,R31
0000be 93ea      	ST   -Y,R30
0000bf 01f9      	MOVW R30,R18
0000c0 2766      	CLR  R22
0000c1 2777      	CLR  R23
0000c2 940e 02cb 	CALL __PUTPARD1
0000c4 e084      	LDI  R24,4
0000c5 940e 0251 	CALL _printf
0000c7 9626      	ADIW R28,6
                 ; 0000 0028               }
                 ; 0000 0029               printf("\n\r");
                 _0xA:
                +
0000c8 e8e1     +LDI R30 , LOW ( 2 * _0x0 + ( 15 ) )
0000c9 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 15 ) )
                 	__POINTW1FN _0x0,15
0000ca 940e 028f 	CALL SUBOPT_0x0
                 ; 0000 002A 
                 ; 0000 002B           }//end of while(a!='e').
0000cc cfd2      	RJMP _0x7
                 _0x9:
                 ; 0000 002C 
                 ; 0000 002D           printf("\n\rthe program is ended.");
                +
0000cd ebec     +LDI R30 , LOW ( 2 * _0x0 + ( 74 ) )
0000ce e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 74 ) )
                 	__POINTW1FN _0x0,74
0000cf 940e 028f 	CALL SUBOPT_0x0
                 ; 0000 002E           while(1);
                 _0xD:
0000d1 cfff      	RJMP _0xD
                 ; 0000 002F       }
                 ; 0000 0030 }
                 _0x10:
0000d2 cfff      	RJMP _0x10
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 getchar0:
0000d3 9b5f           sbis usr,rxc
0000d4 cffe           rjmp getchar0
0000d5 b1ec           in   r30,udr
0000d6 9508      	RET
                 _putchar:
0000d7 93aa      	ST   -Y,R26
                 putchar0:
0000d8 9b5d           sbis usr,udre
0000d9 cffe           rjmp putchar0
0000da 81e8           ld   r30,y
0000db b9ec           out  udr,r30
0000dc 9621      	ADIW R28,1
0000dd 9508      	RET
                 _gets:
0000de 93ba      	ST   -Y,R27
0000df 93aa      	ST   -Y,R26
0000e0 940e 02d0 	CALL __SAVELOCR6
                +
0000e2 810e     +LDD R16 , Y + 6
0000e3 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                +
0000e4 8528     +LDD R18 , Y + 8
0000e5 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                 _0x2000009:
0000e6 2e00      	MOV  R0,R16
0000e7 2a01      	OR   R0,R17
0000e8 f0d9      	BREQ _0x200000B
                 _0x200000C:
0000e9 dfe9      	RCALL _getchar
0000ea 2f5e      	MOV  R21,R30
0000eb 3058      	CPI  R21,8
0000ec f451      	BRNE _0x200000D
0000ed 81ae      	LDD  R26,Y+6
0000ee 81bf      	LDD  R27,Y+6+1
0000ef 170a      	CP   R16,R26
0000f0 071b      	CPC  R17,R27
0000f1 f420      	BRSH _0x200000E
                +
0000f2 5021     +SUBI R18 , LOW ( 1 )
0000f3 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                +
0000f4 5f0f     +SUBI R16 , LOW ( - 1 )
0000f5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 _0x200000E:
0000f6 cff2      	RJMP _0x200000C
                 _0x200000D:
0000f7 305a      	CPI  R21,10
0000f8 f059      	BREQ _0x200000B
0000f9 933f      	PUSH R19
0000fa 932f      	PUSH R18
                +
0000fb 5f2f     +SUBI R18 , LOW ( - 1 )
0000fc 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0000fd 2fe5      	MOV  R30,R21
0000fe 91af      	POP  R26
0000ff 91bf      	POP  R27
000100 93ec      	ST   X,R30
                +
000101 5001     +SUBI R16 , LOW ( 1 )
000102 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000103 cfe2      	RJMP _0x2000009
                 _0x200000B:
000104 01d9      	MOVW R26,R18
000105 e0e0      	LDI  R30,LOW(0)
000106 93ec      	ST   X,R30
000107 85e8      	LDD  R30,Y+8
000108 85f9      	LDD  R31,Y+8+1
000109 940e 02d7 	CALL __LOADLOCR6
00010b 962a      	ADIW R28,10
00010c 9508      	RET
                 _put_usart_G100:
00010d 93ba      	ST   -Y,R27
00010e 93aa      	ST   -Y,R26
00010f 81aa      	LDD  R26,Y+2
000110 dfc6      	RCALL _putchar
000111 81a8      	LD   R26,Y
000112 81b9      	LDD  R27,Y+1
000113 91ed      	LD   R30,X+
000114 91fd      	LD   R31,X+
000115 9631      	ADIW R30,1
000116 93fe      	ST   -X,R31
000117 93ee      	ST   -X,R30
000118 9623      	ADIW R28,3
000119 9508      	RET
                 __print_G100:
00011a 93ba      	ST   -Y,R27
00011b 93aa      	ST   -Y,R26
00011c 9726      	SBIW R28,6
00011d 940e 02d0 	CALL __SAVELOCR6
00011f e010      	LDI  R17,0
000120 85ac      	LDD  R26,Y+12
000121 85bd      	LDD  R27,Y+12+1
000122 e0e0      	LDI  R30,LOW(0)
000123 e0f0      	LDI  R31,HIGH(0)
000124 93ed      	ST   X+,R30
000125 93fc      	ST   X,R31
                 _0x2000016:
000126 89ea      	LDD  R30,Y+18
000127 89fb      	LDD  R31,Y+18+1
000128 9631      	ADIW R30,1
000129 8bea      	STD  Y+18,R30
00012a 8bfb      	STD  Y+18+1,R31
00012b 9731      	SBIW R30,1
00012c 91e4      	LPM  R30,Z
00012d 2f2e      	MOV  R18,R30
00012e 30e0      	CPI  R30,0
00012f f411      	BRNE PC+3
000130 940c 0249 	JMP _0x2000018
000132 2fe1      	MOV  R30,R17
000133 30e0      	CPI  R30,0
000134 f439      	BRNE _0x200001C
000135 3225      	CPI  R18,37
000136 f411      	BRNE _0x200001D
000137 e011      	LDI  R17,LOW(1)
000138 c002      	RJMP _0x200001E
                 _0x200001D:
000139 940e 0296 	CALL SUBOPT_0x1
                 _0x200001E:
00013b c10c      	RJMP _0x200001B
                 _0x200001C:
00013c 30e1      	CPI  R30,LOW(0x1)
00013d f4a9      	BRNE _0x200001F
00013e 3225      	CPI  R18,37
00013f f419      	BRNE _0x2000020
000140 940e 0296 	CALL SUBOPT_0x1
000142 c104      	RJMP _0x20000C9
                 _0x2000020:
000143 e012      	LDI  R17,LOW(2)
000144 e040      	LDI  R20,LOW(0)
000145 e000      	LDI  R16,LOW(0)
000146 322d      	CPI  R18,45
000147 f411      	BRNE _0x2000021
000148 e001      	LDI  R16,LOW(1)
000149 c0fe      	RJMP _0x200001B
                 _0x2000021:
00014a 322b      	CPI  R18,43
00014b f411      	BRNE _0x2000022
00014c e24b      	LDI  R20,LOW(43)
00014d c0fa      	RJMP _0x200001B
                 _0x2000022:
00014e 3220      	CPI  R18,32
00014f f411      	BRNE _0x2000023
000150 e240      	LDI  R20,LOW(32)
000151 c0f6      	RJMP _0x200001B
                 _0x2000023:
000152 c002      	RJMP _0x2000024
                 _0x200001F:
000153 30e2      	CPI  R30,LOW(0x2)
000154 f439      	BRNE _0x2000025
                 _0x2000024:
000155 e050      	LDI  R21,LOW(0)
000156 e013      	LDI  R17,LOW(3)
000157 3320      	CPI  R18,48
000158 f411      	BRNE _0x2000026
000159 6800      	ORI  R16,LOW(128)
00015a c0ed      	RJMP _0x200001B
                 _0x2000026:
00015b c004      	RJMP _0x2000027
                 _0x2000025:
00015c 30e3      	CPI  R30,LOW(0x3)
00015d f011      	BREQ PC+3
00015e 940c 0248 	JMP _0x200001B
                 _0x2000027:
000160 3320      	CPI  R18,48
000161 f010      	BRLO _0x200002A
000162 332a      	CPI  R18,58
000163 f008      	BRLO _0x200002B
                 _0x200002A:
000164 c007      	RJMP _0x2000029
                 _0x200002B:
000165 e0aa      	LDI  R26,LOW(10)
000166 9f5a      	MUL  R21,R26
000167 2d50      	MOV  R21,R0
000168 2fe2      	MOV  R30,R18
000169 53e0      	SUBI R30,LOW(48)
00016a 0f5e      	ADD  R21,R30
00016b c0dc      	RJMP _0x200001B
                 _0x2000029:
00016c 2fe2      	MOV  R30,R18
00016d 36e3      	CPI  R30,LOW(0x63)
00016e f449      	BRNE _0x200002F
00016f 940e 029d 	CALL SUBOPT_0x2
000171 89e8      	LDD  R30,Y+16
000172 89f9      	LDD  R31,Y+16+1
000173 81a4      	LDD  R26,Z+4
000174 93aa      	ST   -Y,R26
000175 940e 02a3 	CALL SUBOPT_0x3
000177 c0cf      	RJMP _0x2000030
                 _0x200002F:
000178 37e3      	CPI  R30,LOW(0x73)
000179 f441      	BRNE _0x2000032
00017a 940e 029d 	CALL SUBOPT_0x2
00017c 940e 02a9 	CALL SUBOPT_0x4
00017e 940e 0276 	CALL _strlen
000180 2f1e      	MOV  R17,R30
000181 c00a      	RJMP _0x2000033
                 _0x2000032:
000182 37e0      	CPI  R30,LOW(0x70)
000183 f461      	BRNE _0x2000035
000184 940e 029d 	CALL SUBOPT_0x2
000186 940e 02a9 	CALL SUBOPT_0x4
000188 940e 0282 	CALL _strlenf
00018a 2f1e      	MOV  R17,R30
00018b 6008      	ORI  R16,LOW(8)
                 _0x2000033:
00018c 6002      	ORI  R16,LOW(2)
00018d 770f      	ANDI R16,LOW(127)
00018e e030      	LDI  R19,LOW(0)
00018f c035      	RJMP _0x2000036
                 _0x2000035:
000190 36e4      	CPI  R30,LOW(0x64)
000191 f011      	BREQ _0x2000039
000192 36e9      	CPI  R30,LOW(0x69)
000193 f411      	BRNE _0x200003A
                 _0x2000039:
000194 6004      	ORI  R16,LOW(4)
000195 c002      	RJMP _0x200003B
                 _0x200003A:
000196 37e5      	CPI  R30,LOW(0x75)
000197 f431      	BRNE _0x200003C
                 _0x200003B:
000198 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
000199 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
00019a 83ee      	STD  Y+6,R30
00019b 83ff      	STD  Y+6+1,R31
00019c e015      	LDI  R17,LOW(5)
00019d c00d      	RJMP _0x200003D
                 _0x200003C:
00019e 35e8      	CPI  R30,LOW(0x58)
00019f f411      	BRNE _0x200003F
0001a0 6008      	ORI  R16,LOW(8)
0001a1 c004      	RJMP _0x2000040
                 _0x200003F:
0001a2 37e8      	CPI  R30,LOW(0x78)
0001a3 f011      	BREQ PC+3
0001a4 940c 0247 	JMP _0x2000071
                 _0x2000040:
0001a6 e5ee      	LDI  R30,LOW(_tbl16_G100*2)
0001a7 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
0001a8 83ee      	STD  Y+6,R30
0001a9 83ff      	STD  Y+6+1,R31
0001aa e014      	LDI  R17,LOW(4)
                 _0x200003D:
0001ab ff02      	SBRS R16,2
0001ac c014      	RJMP _0x2000042
0001ad 940e 029d 	CALL SUBOPT_0x2
0001af 940e 02b3 	CALL SUBOPT_0x5
0001b1 85ab      	LDD  R26,Y+11
0001b2 23aa      	TST  R26
0001b3 f43a      	BRPL _0x2000043
0001b4 85ea      	LDD  R30,Y+10
0001b5 85fb      	LDD  R31,Y+10+1
0001b6 940e 02bf 	CALL __ANEGW1
0001b8 87ea      	STD  Y+10,R30
0001b9 87fb      	STD  Y+10+1,R31
0001ba e24d      	LDI  R20,LOW(45)
                 _0x2000043:
0001bb 3040      	CPI  R20,0
0001bc f011      	BREQ _0x2000044
0001bd 5f1f      	SUBI R17,-LOW(1)
0001be c001      	RJMP _0x2000045
                 _0x2000044:
0001bf 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
0001c0 c004      	RJMP _0x2000046
                 _0x2000042:
0001c1 940e 029d 	CALL SUBOPT_0x2
0001c3 940e 02b3 	CALL SUBOPT_0x5
                 _0x2000046:
                 _0x2000036:
0001c5 fd00      	SBRC R16,0
0001c6 c011      	RJMP _0x2000047
                 _0x2000048:
0001c7 1715      	CP   R17,R21
0001c8 f478      	BRSH _0x200004A
0001c9 ff07      	SBRS R16,7
0001ca c008      	RJMP _0x200004B
0001cb ff02      	SBRS R16,2
0001cc c004      	RJMP _0x200004C
0001cd 7f0b      	ANDI R16,LOW(251)
0001ce 2f24      	MOV  R18,R20
0001cf 5011      	SUBI R17,LOW(1)
0001d0 c001      	RJMP _0x200004D
                 _0x200004C:
0001d1 e320      	LDI  R18,LOW(48)
                 _0x200004D:
0001d2 c001      	RJMP _0x200004E
                 _0x200004B:
0001d3 e220      	LDI  R18,LOW(32)
                 _0x200004E:
0001d4 940e 0296 	CALL SUBOPT_0x1
0001d6 5051      	SUBI R21,LOW(1)
0001d7 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0001d8 2f31      	MOV  R19,R17
0001d9 ff01      	SBRS R16,1
0001da c017      	RJMP _0x200004F
                 _0x2000050:
0001db 3030      	CPI  R19,0
0001dc f0a1      	BREQ _0x2000052
0001dd ff03      	SBRS R16,3
0001de c006      	RJMP _0x2000053
0001df 81ee      	LDD  R30,Y+6
0001e0 81ff      	LDD  R31,Y+6+1
0001e1 9125      	LPM  R18,Z+
0001e2 83ee      	STD  Y+6,R30
0001e3 83ff      	STD  Y+6+1,R31
0001e4 c005      	RJMP _0x2000054
                 _0x2000053:
0001e5 81ae      	LDD  R26,Y+6
0001e6 81bf      	LDD  R27,Y+6+1
0001e7 912d      	LD   R18,X+
0001e8 83ae      	STD  Y+6,R26
0001e9 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0001ea 940e 0296 	CALL SUBOPT_0x1
0001ec 3050      	CPI  R21,0
0001ed f009      	BREQ _0x2000055
0001ee 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0001ef 5031      	SUBI R19,LOW(1)
0001f0 cfea      	RJMP _0x2000050
                 _0x2000052:
0001f1 c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0001f2 e320      	LDI  R18,LOW(48)
0001f3 81ee      	LDD  R30,Y+6
0001f4 81ff      	LDD  R31,Y+6+1
0001f5 940e 02c7 	CALL __GETW1PF
0001f7 87e8      	STD  Y+8,R30
0001f8 87f9      	STD  Y+8+1,R31
0001f9 81ee      	LDD  R30,Y+6
0001fa 81ff      	LDD  R31,Y+6+1
0001fb 9632      	ADIW R30,2
0001fc 83ee      	STD  Y+6,R30
0001fd 83ff      	STD  Y+6+1,R31
                 _0x200005A:
0001fe 85e8      	LDD  R30,Y+8
0001ff 85f9      	LDD  R31,Y+8+1
000200 85aa      	LDD  R26,Y+10
000201 85bb      	LDD  R27,Y+10+1
000202 17ae      	CP   R26,R30
000203 07bf      	CPC  R27,R31
000204 f050      	BRLO _0x200005C
000205 5f2f      	SUBI R18,-LOW(1)
000206 85a8      	LDD  R26,Y+8
000207 85b9      	LDD  R27,Y+8+1
000208 85ea      	LDD  R30,Y+10
000209 85fb      	LDD  R31,Y+10+1
00020a 1bea      	SUB  R30,R26
00020b 0bfb      	SBC  R31,R27
00020c 87ea      	STD  Y+10,R30
00020d 87fb      	STD  Y+10+1,R31
00020e cfef      	RJMP _0x200005A
                 _0x200005C:
00020f 332a      	CPI  R18,58
000210 f028      	BRLO _0x200005D
000211 ff03      	SBRS R16,3
000212 c002      	RJMP _0x200005E
000213 5f29      	SUBI R18,-LOW(7)
000214 c001      	RJMP _0x200005F
                 _0x200005E:
000215 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
000216 fd04      	SBRC R16,4
000217 c01a      	RJMP _0x2000061
000218 3321      	CPI  R18,49
000219 f420      	BRSH _0x2000063
00021a 85a8      	LDD  R26,Y+8
00021b 85b9      	LDD  R27,Y+8+1
00021c 9711      	SBIW R26,1
00021d f409      	BRNE _0x2000062
                 _0x2000063:
00021e c009      	RJMP _0x20000CA
                 _0x2000062:
00021f 1753      	CP   R21,R19
000220 f010      	BRLO _0x2000067
000221 ff00      	SBRS R16,0
000222 c001      	RJMP _0x2000068
                 _0x2000067:
000223 c013      	RJMP _0x2000066
                 _0x2000068:
000224 e220      	LDI  R18,LOW(32)
000225 ff07      	SBRS R16,7
000226 c00b      	RJMP _0x2000069
000227 e320      	LDI  R18,LOW(48)
                 _0x20000CA:
000228 6100      	ORI  R16,LOW(16)
000229 ff02      	SBRS R16,2
00022a c007      	RJMP _0x200006A
00022b 7f0b      	ANDI R16,LOW(251)
00022c 934a      	ST   -Y,R20
00022d 940e 02a3 	CALL SUBOPT_0x3
00022f 3050      	CPI  R21,0
000230 f009      	BREQ _0x200006B
000231 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
000232 940e 0296 	CALL SUBOPT_0x1
000234 3050      	CPI  R21,0
000235 f009      	BREQ _0x200006C
000236 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000237 5031      	SUBI R19,LOW(1)
000238 85a8      	LDD  R26,Y+8
000239 85b9      	LDD  R27,Y+8+1
00023a 9712      	SBIW R26,2
00023b f008      	BRLO _0x2000059
00023c cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
00023d ff00      	SBRS R16,0
00023e c008      	RJMP _0x200006D
                 _0x200006E:
00023f 3050      	CPI  R21,0
000240 f031      	BREQ _0x2000070
000241 5051      	SUBI R21,LOW(1)
000242 e2e0      	LDI  R30,LOW(32)
000243 93ea      	ST   -Y,R30
000244 940e 02a3 	CALL SUBOPT_0x3
000246 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000C9:
000247 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000248 cedd      	RJMP _0x2000016
                 _0x2000018:
000249 85ac      	LDD  R26,Y+12
00024a 85bd      	LDD  R27,Y+12+1
00024b 940e 02c3 	CALL __GETW1P
00024d 940e 02d7 	CALL __LOADLOCR6
00024f 9664      	ADIW R28,20
000250 9508      	RET
                 _printf:
000251 92ff      	PUSH R15
000252 2ef8      	MOV  R15,R24
000253 9726      	SBIW R28,6
000254 931a      	ST   -Y,R17
000255 930a      	ST   -Y,R16
000256 01de      	MOVW R26,R28
000257 9614      	ADIW R26,4
000258 940e 02bb 	CALL __ADDW2R15
00025a 018d      	MOVW R16,R26
00025b e0e0      	LDI  R30,LOW(0)
00025c 83ec      	STD  Y+4,R30
00025d 83ed      	STD  Y+4+1,R30
00025e 83ee      	STD  Y+6,R30
00025f 83ef      	STD  Y+6+1,R30
000260 01de      	MOVW R26,R28
000261 9618      	ADIW R26,8
000262 940e 02bb 	CALL __ADDW2R15
000264 940e 02c3 	CALL __GETW1P
000266 93fa      	ST   -Y,R31
000267 93ea      	ST   -Y,R30
000268 931a      	ST   -Y,R17
000269 930a      	ST   -Y,R16
00026a e0ed      	LDI  R30,LOW(_put_usart_G100)
00026b e0f1      	LDI  R31,HIGH(_put_usart_G100)
00026c 93fa      	ST   -Y,R31
00026d 93ea      	ST   -Y,R30
00026e 01de      	MOVW R26,R28
00026f 9618      	ADIW R26,8
000270 dea9      	RCALL __print_G100
000271 8119      	LDD  R17,Y+1
000272 8108      	LDD  R16,Y+0
000273 9628      	ADIW R28,8
000274 90ff      	POP  R15
000275 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
000276 93ba      	ST   -Y,R27
000277 93aa      	ST   -Y,R26
000278 91a9          ld   r26,y+
000279 91b9          ld   r27,y+
00027a 27ee          clr  r30
00027b 27ff          clr  r31
                 strlen0:
00027c 916d          ld   r22,x+
00027d 2366          tst  r22
00027e f011          breq strlen1
00027f 9631          adiw r30,1
000280 cffb          rjmp strlen0
                 strlen1:
000281 9508          ret
                 _strlenf:
000282 93ba      	ST   -Y,R27
000283 93aa      	ST   -Y,R26
000284 27aa          clr  r26
000285 27bb          clr  r27
000286 91e9          ld   r30,y+
000287 91f9          ld   r31,y+
                 strlenf0:
000288 9005      	lpm  r0,z+
000289 2000          tst  r0
00028a f011          breq strlenf1
00028b 9611          adiw r26,1
00028c cffb          rjmp strlenf0
                 strlenf1:
00028d 01fd          movw r30,r26
00028e 9508          ret
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
00028f 93fa      	ST   -Y,R31
000290 93ea      	ST   -Y,R30
000291 e080      	LDI  R24,0
000292 940e 0251 	CALL _printf
000294 9622      	ADIW R28,2
000295 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1:
000296 932a      	ST   -Y,R18
000297 85ad      	LDD  R26,Y+13
000298 85be      	LDD  R27,Y+13+1
000299 85ef      	LDD  R30,Y+15
00029a 89f8      	LDD  R31,Y+15+1
00029b 9509      	ICALL
00029c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2:
00029d 89e8      	LDD  R30,Y+16
00029e 89f9      	LDD  R31,Y+16+1
00029f 9734      	SBIW R30,4
0002a0 8be8      	STD  Y+16,R30
0002a1 8bf9      	STD  Y+16+1,R31
0002a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
0002a3 85ad      	LDD  R26,Y+13
0002a4 85be      	LDD  R27,Y+13+1
0002a5 85ef      	LDD  R30,Y+15
0002a6 89f8      	LDD  R31,Y+15+1
0002a7 9509      	ICALL
0002a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
0002a9 89a8      	LDD  R26,Y+16
0002aa 89b9      	LDD  R27,Y+16+1
0002ab 9614      	ADIW R26,4
0002ac 940e 02c3 	CALL __GETW1P
0002ae 83ee      	STD  Y+6,R30
0002af 83ff      	STD  Y+6+1,R31
0002b0 81ae      	LDD  R26,Y+6
0002b1 81bf      	LDD  R27,Y+6+1
0002b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
0002b3 89a8      	LDD  R26,Y+16
0002b4 89b9      	LDD  R27,Y+16+1
0002b5 9614      	ADIW R26,4
0002b6 940e 02c3 	CALL __GETW1P
0002b8 87ea      	STD  Y+10,R30
0002b9 87fb      	STD  Y+10+1,R31
0002ba 9508      	RET
                 
                 
                 	.CSEG
                 __ADDW2R15:
0002bb 2400      	CLR  R0
0002bc 0daf      	ADD  R26,R15
0002bd 1db0      	ADC  R27,R0
0002be 9508      	RET
                 
                 __ANEGW1:
0002bf 95f1      	NEG  R31
0002c0 95e1      	NEG  R30
0002c1 40f0      	SBCI R31,0
0002c2 9508      	RET
                 
                 __GETW1P:
0002c3 91ed      	LD   R30,X+
0002c4 91fc      	LD   R31,X
0002c5 9711      	SBIW R26,1
0002c6 9508      	RET
                 
                 __GETW1PF:
0002c7 9005      	LPM  R0,Z+
0002c8 91f4      	LPM  R31,Z
0002c9 2de0      	MOV  R30,R0
0002ca 9508      	RET
                 
                 __PUTPARD1:
0002cb 937a      	ST   -Y,R23
0002cc 936a      	ST   -Y,R22
0002cd 93fa      	ST   -Y,R31
0002ce 93ea      	ST   -Y,R30
0002cf 9508      	RET
                 
                 __SAVELOCR6:
0002d0 935a      	ST   -Y,R21
                 __SAVELOCR5:
0002d1 934a      	ST   -Y,R20
                 __SAVELOCR4:
0002d2 933a      	ST   -Y,R19
                 __SAVELOCR3:
0002d3 932a      	ST   -Y,R18
                 __SAVELOCR2:
0002d4 931a      	ST   -Y,R17
0002d5 930a      	ST   -Y,R16
0002d6 9508      	RET
                 
                 __LOADLOCR6:
0002d7 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0002d8 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0002d9 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0002da 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0002db 8119      	LDD  R17,Y+1
0002dc 8108      	LD   R16,Y
0002dd 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
0002de 0fac      	ADD  R26,R28
0002df 1fbd      	ADC  R27,R29
                 __INITLOC0:
0002e0 9005      	LPM  R0,Z+
0002e1 920d      	ST   X+,R0
0002e2 958a      	DEC  R24
0002e3 f7e1      	BRNE __INITLOC0
0002e4 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  11 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  35 r17:  31 r18:  34 r19:  12 r20:   9 r21:  21 r22:   4 r23:   2 
r24:   9 r25:   1 r26:  57 r27:  32 r28:  16 r29:   2 r30: 120 r31:  57 
x  :  15 y  : 138 z  :   7 
Registers used: 21 out of 35 (60.0%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   4 
adiw  :  17 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  14 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   0 brne  :  21 brpl  :   1 brsh  :   3 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  40 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   9 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  34 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   3 inc   :   0 jmp   :  25 ld    :  13 ldd   :  65 ldi   :  69 
lds   :   0 lpm   :   8 lsl   :   0 lsr   :   0 mov   :  15 movw  :   9 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   6 out   :  14 pop   :   4 push  :   4 rcall :   3 ret   :  22 
reti  :   0 rjmp  :  54 rol   :   0 ror   :   0 sbc   :   1 sbci  :   5 
sbi   :   0 sbic  :   0 sbis  :   2 sbiw  :  10 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  48 std   :  28 sts   :   0 sub   :   1 subi  :  17 swap  :   0 
tst   :   3 wdr   :   0 
Instructions used: 46 out of 116 (39.7%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0005ca   1354    128   1482   32768   4.5%
[.dseg] 0x000060 0x000260      0      0      0    2143   0.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 1 warnings
